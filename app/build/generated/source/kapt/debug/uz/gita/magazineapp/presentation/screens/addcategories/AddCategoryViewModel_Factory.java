// Generated by Dagger (https://dagger.dev).
package uz.gita.magazineapp.presentation.screens.addcategories;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.magazineapp.domain.repositories.datarepository.DataRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddCategoryViewModel_Factory implements Factory<AddCategoryViewModel> {
  private final Provider<DataRepository> repositoryProvider;

  private final Provider<AddCategoryDirection> directionProvider;

  public AddCategoryViewModel_Factory(Provider<DataRepository> repositoryProvider,
      Provider<AddCategoryDirection> directionProvider) {
    this.repositoryProvider = repositoryProvider;
    this.directionProvider = directionProvider;
  }

  @Override
  public AddCategoryViewModel get() {
    return newInstance(repositoryProvider.get(), directionProvider.get());
  }

  public static AddCategoryViewModel_Factory create(Provider<DataRepository> repositoryProvider,
      Provider<AddCategoryDirection> directionProvider) {
    return new AddCategoryViewModel_Factory(repositoryProvider, directionProvider);
  }

  public static AddCategoryViewModel newInstance(DataRepository repository,
      AddCategoryDirection direction) {
    return new AddCategoryViewModel(repository, direction);
  }
}
