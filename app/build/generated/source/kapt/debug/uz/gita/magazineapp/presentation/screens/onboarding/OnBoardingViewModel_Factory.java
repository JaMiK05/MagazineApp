// Generated by Dagger (https://dagger.dev).
package uz.gita.magazineapp.presentation.screens.onboarding;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OnBoardingViewModel_Factory implements Factory<OnBoardingViewModel> {
  private final Provider<OnBoardingDirection> directionProvider;

  public OnBoardingViewModel_Factory(Provider<OnBoardingDirection> directionProvider) {
    this.directionProvider = directionProvider;
  }

  @Override
  public OnBoardingViewModel get() {
    return newInstance(directionProvider.get());
  }

  public static OnBoardingViewModel_Factory create(
      Provider<OnBoardingDirection> directionProvider) {
    return new OnBoardingViewModel_Factory(directionProvider);
  }

  public static OnBoardingViewModel newInstance(OnBoardingDirection direction) {
    return new OnBoardingViewModel(direction);
  }
}
