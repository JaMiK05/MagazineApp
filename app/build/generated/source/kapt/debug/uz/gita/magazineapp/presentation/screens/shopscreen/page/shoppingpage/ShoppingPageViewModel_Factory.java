// Generated by Dagger (https://dagger.dev).
package uz.gita.magazineapp.presentation.screens.shopscreen.page.shoppingpage;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.magazineapp.domain.repositories.datarepository.DataRepository;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ShoppingPageViewModel_Factory implements Factory<ShoppingPageViewModel> {
  private final Provider<ShoppingPageDirection> directionProvider;

  private final Provider<DataRepository> repositoryProvider;

  public ShoppingPageViewModel_Factory(Provider<ShoppingPageDirection> directionProvider,
      Provider<DataRepository> repositoryProvider) {
    this.directionProvider = directionProvider;
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public ShoppingPageViewModel get() {
    return newInstance(directionProvider.get(), repositoryProvider.get());
  }

  public static ShoppingPageViewModel_Factory create(
      Provider<ShoppingPageDirection> directionProvider,
      Provider<DataRepository> repositoryProvider) {
    return new ShoppingPageViewModel_Factory(directionProvider, repositoryProvider);
  }

  public static ShoppingPageViewModel newInstance(ShoppingPageDirection direction,
      DataRepository repository) {
    return new ShoppingPageViewModel(direction, repository);
  }
}
