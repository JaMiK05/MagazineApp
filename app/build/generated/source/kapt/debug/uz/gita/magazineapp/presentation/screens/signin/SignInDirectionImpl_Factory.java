// Generated by Dagger (https://dagger.dev).
package uz.gita.magazineapp.presentation.screens.signin;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import uz.gita.magazineapp.util.navigation.AppNavigator;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SignInDirectionImpl_Factory implements Factory<SignInDirectionImpl> {
  private final Provider<AppNavigator> navigatorProvider;

  public SignInDirectionImpl_Factory(Provider<AppNavigator> navigatorProvider) {
    this.navigatorProvider = navigatorProvider;
  }

  @Override
  public SignInDirectionImpl get() {
    return newInstance(navigatorProvider.get());
  }

  public static SignInDirectionImpl_Factory create(Provider<AppNavigator> navigatorProvider) {
    return new SignInDirectionImpl_Factory(navigatorProvider);
  }

  public static SignInDirectionImpl newInstance(AppNavigator navigator) {
    return new SignInDirectionImpl(navigator);
  }
}
